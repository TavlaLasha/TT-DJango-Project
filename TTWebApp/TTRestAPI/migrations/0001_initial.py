# Generated by Django 4.0 on 2021-12-13 20:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('attributeid', models.IntegerField(blank=True, db_column='AttributeID', primary_key=True, serialize=False)),
                ('attributename', models.CharField(db_column='AttributeName', max_length=50)),
            ],
            options={
                'db_table': 'Attributes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryid', models.AutoField(db_column='CategoryID', primary_key=True, serialize=False)),
                ('categoryname', models.CharField(db_column='CategoryName', max_length=50)),
            ],
            options={
                'db_table': 'Category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categoryattribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'CategoryAttribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('cityid', models.AutoField(db_column='CityID', primary_key=True, serialize=False)),
                ('city', models.CharField(db_column='City', max_length=50)),
            ],
            options={
                'db_table': 'Cities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customercart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(db_column='Count')),
                ('adddate', models.DateField(auto_now_add=True, db_column='AddDate')),
            ],
            options={
                'db_table': 'CustomerCart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customerwishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adddate', models.DateField(auto_now_add=True, db_column='AddDate')),
            ],
            options={
                'db_table': 'CustomerWishList',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cutomers',
            fields=[
                ('customerid', models.AutoField(db_column='CustomerID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', max_length=50, unique=True)),
                ('firstname', models.CharField(db_column='FirstName', max_length=50)),
                ('lastname', models.CharField(db_column='LastName', max_length=50)),
                ('email', models.CharField(db_column='Email', max_length=50, unique=True)),
                ('phone', models.CharField(db_column='Phone', max_length=25, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=128)),
                ('registerdate', models.DateField(auto_now_add=True, db_column='RegisterDate')),
                ('lastlogin', models.DateField(auto_now_add=True, db_column='LastLogin')),
                ('isactive', models.TextField(db_column='IsActive')),
                ('isadmin', models.TextField(db_column='IsAdmin')),
            ],
            options={
                'db_table': 'Cutomers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guestcart',
            fields=[
                ('guestid', models.AutoField(db_column='GuestID', primary_key=True, serialize=False)),
                ('count', models.IntegerField(db_column='Count', null=True)),
                ('adddate', models.DateField(auto_now_add=True, db_column='AddDate')),
                ('conectionvalue', models.TextField(db_column='ConectionValue')),
            ],
            options={
                'db_table': 'GuestCart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orderdetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('discount', models.IntegerField(db_column='Discount')),
                ('price', models.IntegerField(db_column='Price')),
                ('total', models.IntegerField(db_column='Total')),
            ],
            options={
                'db_table': 'OrderDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
                ('orderdate', models.DateField(auto_now_add=True, db_column='OrderDate')),
                ('shippostalcode', models.CharField(db_column='ShipPostalCode', max_length=50)),
                ('address', models.CharField(db_column='Address', max_length=50)),
                ('paymenttype', models.CharField(db_column='PaymentType', max_length=50)),
                ('statusdate', models.IntegerField(db_column='StatusDate')),
            ],
            options={
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(db_column='ProductID', primary_key=True, serialize=False)),
                ('productname', models.CharField(db_column='ProductName', max_length=50)),
                ('picture', models.CharField(db_column='Picture', max_length=50)),
                ('price', models.CharField(db_column='Price', max_length=50, null=True)),
                ('serialnumber', models.CharField(db_column='SerialNumber', max_length=50, null=True)),
                ('discription', models.TextField(db_column='Discription', null=True)),
            ],
            options={
                'db_table': 'Product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productattribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributevalue', models.TextField(blank=True, db_column='AttributeValue')),
            ],
            options={
                'db_table': 'ProductAttribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('statusid', models.AutoField(db_column='StatusID', primary_key=True, serialize=False)),
                ('status', models.CharField(db_column='Status', max_length=50)),
            ],
            options={
                'db_table': 'Status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supllier',
            fields=[
                ('supllierid', models.AutoField(db_column='SupllierID', primary_key=True, serialize=False)),
                ('companyname', models.CharField(db_column='CompanyName', max_length=50)),
                ('contactname', models.CharField(db_column='ContactName', max_length=50)),
                ('postalcode', models.CharField(db_column='PostalCode', max_length=50)),
                ('phone', models.CharField(db_column='Phone', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Supllier',
                'managed': False,
            },
        ),
    ]
